/**
 * @fileoverview gRPC-Web generated client stub for fonoster.trunks.v1beta2
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: trunks.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as trunks_pb from './trunks_pb'; // proto import: "trunks.proto"


export class TrunksClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateTrunk = new grpcWeb.MethodDescriptor(
    '/fonoster.trunks.v1beta2.Trunks/CreateTrunk',
    grpcWeb.MethodType.UNARY,
    trunks_pb.CreateTrunkRequest,
    trunks_pb.CreateTrunkResponse,
    (request: trunks_pb.CreateTrunkRequest) => {
      return request.serializeBinary();
    },
    trunks_pb.CreateTrunkResponse.deserializeBinary
  );

  createTrunk(
    request: trunks_pb.CreateTrunkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<trunks_pb.CreateTrunkResponse>;

  createTrunk(
    request: trunks_pb.CreateTrunkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: trunks_pb.CreateTrunkResponse) => void): grpcWeb.ClientReadableStream<trunks_pb.CreateTrunkResponse>;

  createTrunk(
    request: trunks_pb.CreateTrunkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: trunks_pb.CreateTrunkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.trunks.v1beta2.Trunks/CreateTrunk',
        request,
        metadata || {},
        this.methodDescriptorCreateTrunk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.trunks.v1beta2.Trunks/CreateTrunk',
    request,
    metadata || {},
    this.methodDescriptorCreateTrunk);
  }

  methodDescriptorUpdateTrunk = new grpcWeb.MethodDescriptor(
    '/fonoster.trunks.v1beta2.Trunks/UpdateTrunk',
    grpcWeb.MethodType.UNARY,
    trunks_pb.UpdateTrunkRequest,
    trunks_pb.UpdateTrunkResponse,
    (request: trunks_pb.UpdateTrunkRequest) => {
      return request.serializeBinary();
    },
    trunks_pb.UpdateTrunkResponse.deserializeBinary
  );

  updateTrunk(
    request: trunks_pb.UpdateTrunkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<trunks_pb.UpdateTrunkResponse>;

  updateTrunk(
    request: trunks_pb.UpdateTrunkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: trunks_pb.UpdateTrunkResponse) => void): grpcWeb.ClientReadableStream<trunks_pb.UpdateTrunkResponse>;

  updateTrunk(
    request: trunks_pb.UpdateTrunkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: trunks_pb.UpdateTrunkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.trunks.v1beta2.Trunks/UpdateTrunk',
        request,
        metadata || {},
        this.methodDescriptorUpdateTrunk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.trunks.v1beta2.Trunks/UpdateTrunk',
    request,
    metadata || {},
    this.methodDescriptorUpdateTrunk);
  }

  methodDescriptorGetTrunk = new grpcWeb.MethodDescriptor(
    '/fonoster.trunks.v1beta2.Trunks/GetTrunk',
    grpcWeb.MethodType.UNARY,
    trunks_pb.GetTrunkRequest,
    trunks_pb.Trunk,
    (request: trunks_pb.GetTrunkRequest) => {
      return request.serializeBinary();
    },
    trunks_pb.Trunk.deserializeBinary
  );

  getTrunk(
    request: trunks_pb.GetTrunkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<trunks_pb.Trunk>;

  getTrunk(
    request: trunks_pb.GetTrunkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: trunks_pb.Trunk) => void): grpcWeb.ClientReadableStream<trunks_pb.Trunk>;

  getTrunk(
    request: trunks_pb.GetTrunkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: trunks_pb.Trunk) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.trunks.v1beta2.Trunks/GetTrunk',
        request,
        metadata || {},
        this.methodDescriptorGetTrunk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.trunks.v1beta2.Trunks/GetTrunk',
    request,
    metadata || {},
    this.methodDescriptorGetTrunk);
  }

  methodDescriptorDeleteTrunk = new grpcWeb.MethodDescriptor(
    '/fonoster.trunks.v1beta2.Trunks/DeleteTrunk',
    grpcWeb.MethodType.UNARY,
    trunks_pb.DeleteTrunkRequest,
    trunks_pb.DeleteTrunkResponse,
    (request: trunks_pb.DeleteTrunkRequest) => {
      return request.serializeBinary();
    },
    trunks_pb.DeleteTrunkResponse.deserializeBinary
  );

  deleteTrunk(
    request: trunks_pb.DeleteTrunkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<trunks_pb.DeleteTrunkResponse>;

  deleteTrunk(
    request: trunks_pb.DeleteTrunkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: trunks_pb.DeleteTrunkResponse) => void): grpcWeb.ClientReadableStream<trunks_pb.DeleteTrunkResponse>;

  deleteTrunk(
    request: trunks_pb.DeleteTrunkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: trunks_pb.DeleteTrunkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.trunks.v1beta2.Trunks/DeleteTrunk',
        request,
        metadata || {},
        this.methodDescriptorDeleteTrunk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.trunks.v1beta2.Trunks/DeleteTrunk',
    request,
    metadata || {},
    this.methodDescriptorDeleteTrunk);
  }

  methodDescriptorListTrunks = new grpcWeb.MethodDescriptor(
    '/fonoster.trunks.v1beta2.Trunks/ListTrunks',
    grpcWeb.MethodType.UNARY,
    trunks_pb.ListTrunksRequest,
    trunks_pb.ListTrunksResponse,
    (request: trunks_pb.ListTrunksRequest) => {
      return request.serializeBinary();
    },
    trunks_pb.ListTrunksResponse.deserializeBinary
  );

  listTrunks(
    request: trunks_pb.ListTrunksRequest,
    metadata?: grpcWeb.Metadata | null): Promise<trunks_pb.ListTrunksResponse>;

  listTrunks(
    request: trunks_pb.ListTrunksRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: trunks_pb.ListTrunksResponse) => void): grpcWeb.ClientReadableStream<trunks_pb.ListTrunksResponse>;

  listTrunks(
    request: trunks_pb.ListTrunksRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: trunks_pb.ListTrunksResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.trunks.v1beta2.Trunks/ListTrunks',
        request,
        metadata || {},
        this.methodDescriptorListTrunks,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.trunks.v1beta2.Trunks/ListTrunks',
    request,
    metadata || {},
    this.methodDescriptorListTrunks);
  }

}

