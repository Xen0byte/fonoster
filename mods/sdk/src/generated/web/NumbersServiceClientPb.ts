/**
 * @fileoverview gRPC-Web generated client stub for fonoster.numbers.v1beta2
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: numbers.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as numbers_pb from './numbers_pb'; // proto import: "numbers.proto"


export class NumbersClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateNumber = new grpcWeb.MethodDescriptor(
    '/fonoster.numbers.v1beta2.Numbers/CreateNumber',
    grpcWeb.MethodType.UNARY,
    numbers_pb.CreateNumberRequest,
    numbers_pb.CreateNumberResponse,
    (request: numbers_pb.CreateNumberRequest) => {
      return request.serializeBinary();
    },
    numbers_pb.CreateNumberResponse.deserializeBinary
  );

  createNumber(
    request: numbers_pb.CreateNumberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<numbers_pb.CreateNumberResponse>;

  createNumber(
    request: numbers_pb.CreateNumberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: numbers_pb.CreateNumberResponse) => void): grpcWeb.ClientReadableStream<numbers_pb.CreateNumberResponse>;

  createNumber(
    request: numbers_pb.CreateNumberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: numbers_pb.CreateNumberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.numbers.v1beta2.Numbers/CreateNumber',
        request,
        metadata || {},
        this.methodDescriptorCreateNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.numbers.v1beta2.Numbers/CreateNumber',
    request,
    metadata || {},
    this.methodDescriptorCreateNumber);
  }

  methodDescriptorUpdateNumber = new grpcWeb.MethodDescriptor(
    '/fonoster.numbers.v1beta2.Numbers/UpdateNumber',
    grpcWeb.MethodType.UNARY,
    numbers_pb.UpdateNumberRequest,
    numbers_pb.UpdateNumberResponse,
    (request: numbers_pb.UpdateNumberRequest) => {
      return request.serializeBinary();
    },
    numbers_pb.UpdateNumberResponse.deserializeBinary
  );

  updateNumber(
    request: numbers_pb.UpdateNumberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<numbers_pb.UpdateNumberResponse>;

  updateNumber(
    request: numbers_pb.UpdateNumberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: numbers_pb.UpdateNumberResponse) => void): grpcWeb.ClientReadableStream<numbers_pb.UpdateNumberResponse>;

  updateNumber(
    request: numbers_pb.UpdateNumberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: numbers_pb.UpdateNumberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.numbers.v1beta2.Numbers/UpdateNumber',
        request,
        metadata || {},
        this.methodDescriptorUpdateNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.numbers.v1beta2.Numbers/UpdateNumber',
    request,
    metadata || {},
    this.methodDescriptorUpdateNumber);
  }

  methodDescriptorGetNumber = new grpcWeb.MethodDescriptor(
    '/fonoster.numbers.v1beta2.Numbers/GetNumber',
    grpcWeb.MethodType.UNARY,
    numbers_pb.GetNumberRequest,
    numbers_pb.Number,
    (request: numbers_pb.GetNumberRequest) => {
      return request.serializeBinary();
    },
    numbers_pb.Number.deserializeBinary
  );

  getNumber(
    request: numbers_pb.GetNumberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<numbers_pb.Number>;

  getNumber(
    request: numbers_pb.GetNumberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: numbers_pb.Number) => void): grpcWeb.ClientReadableStream<numbers_pb.Number>;

  getNumber(
    request: numbers_pb.GetNumberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: numbers_pb.Number) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.numbers.v1beta2.Numbers/GetNumber',
        request,
        metadata || {},
        this.methodDescriptorGetNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.numbers.v1beta2.Numbers/GetNumber',
    request,
    metadata || {},
    this.methodDescriptorGetNumber);
  }

  methodDescriptorDeleteNumber = new grpcWeb.MethodDescriptor(
    '/fonoster.numbers.v1beta2.Numbers/DeleteNumber',
    grpcWeb.MethodType.UNARY,
    numbers_pb.DeleteNumberRequest,
    numbers_pb.DeleteNumberResponse,
    (request: numbers_pb.DeleteNumberRequest) => {
      return request.serializeBinary();
    },
    numbers_pb.DeleteNumberResponse.deserializeBinary
  );

  deleteNumber(
    request: numbers_pb.DeleteNumberRequest,
    metadata?: grpcWeb.Metadata | null): Promise<numbers_pb.DeleteNumberResponse>;

  deleteNumber(
    request: numbers_pb.DeleteNumberRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: numbers_pb.DeleteNumberResponse) => void): grpcWeb.ClientReadableStream<numbers_pb.DeleteNumberResponse>;

  deleteNumber(
    request: numbers_pb.DeleteNumberRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: numbers_pb.DeleteNumberResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.numbers.v1beta2.Numbers/DeleteNumber',
        request,
        metadata || {},
        this.methodDescriptorDeleteNumber,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.numbers.v1beta2.Numbers/DeleteNumber',
    request,
    metadata || {},
    this.methodDescriptorDeleteNumber);
  }

  methodDescriptorListNumbers = new grpcWeb.MethodDescriptor(
    '/fonoster.numbers.v1beta2.Numbers/ListNumbers',
    grpcWeb.MethodType.UNARY,
    numbers_pb.ListNumbersRequest,
    numbers_pb.ListNumbersResponse,
    (request: numbers_pb.ListNumbersRequest) => {
      return request.serializeBinary();
    },
    numbers_pb.ListNumbersResponse.deserializeBinary
  );

  listNumbers(
    request: numbers_pb.ListNumbersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<numbers_pb.ListNumbersResponse>;

  listNumbers(
    request: numbers_pb.ListNumbersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: numbers_pb.ListNumbersResponse) => void): grpcWeb.ClientReadableStream<numbers_pb.ListNumbersResponse>;

  listNumbers(
    request: numbers_pb.ListNumbersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: numbers_pb.ListNumbersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/fonoster.numbers.v1beta2.Numbers/ListNumbers',
        request,
        metadata || {},
        this.methodDescriptorListNumbers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/fonoster.numbers.v1beta2.Numbers/ListNumbers',
    request,
    metadata || {},
    this.methodDescriptorListNumbers);
  }

}

